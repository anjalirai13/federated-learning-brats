# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
# -------------------------------------
# Enclave Manifest for OpenFL TaskRunner API.
# This defines the configuration for the Gramine loader to run a Python application.
# -------------------------------------

libos.entrypoint = "{{ entrypoint }}"
loader.entrypoint.uri = "file:{{ gramine.libos }}"
loader.log_level = "{{ log_level }}"

loader.insecure__use_cmdline_argv = true
loader.insecure__use_host_env = true

loader.env.LD_LIBRARY_PATH = "{{ venv_root }}:{{ arch_libdir }}:/usr/{{ arch_libdir }}:/lib:/usr/lib"

# Filesystem configuration within Gramine LibOS
fs.start_dir = "{{ workspace_root }}"
fs.mounts = [
  # System mounts (URI: path on host, PATH: pointer inside gramine)
  { uri = "file:{{ gramine.runtimedir() }}", path = "/lib" },
  { uri = "file:{{ arch_libdir }}", path = "{{ arch_libdir }}" },
  { uri = "file:/usr", path = "/usr" },
  { type = "tmpfs", path = "/tmp" },
  # User-defined mounts specific to the application.
  { uri = "file:{{ workspace_root }}/", path = "{{ workspace_root }}/" },
  { uri = "file:{{ venv_root }}", path = "{{ venv_root }}" },
  { uri = "file:/intel/.openfl/experimental", path = "/intel/.openfl/experimental" },
  { uri = "file:/intel/.metaflow/FederatedBrats", path = "/intel/.metaflow/FederatedBrats" },
]

# System configuration
sys.stack.size = "4M"
sys.brk.max_size = "1M"
sys.enable_sigterm_injection = true
sys.enable_extra_runtime_domain_names_conf = true
sys.experimental__enable_flock = true
sgx.remote_attestation="dcap"

# SGX configuration
sgx.debug = false
sgx.enclave_size = "32G"
sgx.max_threads = 512
sgx.use_exinfo = true

# List of trusted files, that are hashed and signed by the enclave.
# If these files change after signing of an enclave, application cannot run.
sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:{{ python.stdlib }}/",
  "file:{{ python.distlib }}/",
{% for path in python.get_sys_path('python') %}
  "file:{{ path }}{{ '/' if path.is_dir() else '' }}",
{% endfor %}
  "file:{{ venv_root }}/",
  "file:{{ workspace_root }}/",
  "file:/intel/.openfl/experimental",
  "file:/usr/lib/os-release",
]

# List of allowed files that SGX enclave does NOT verify with signatures.
# One should be conservative as to which files are allowed, these can be modified by enclave.
sgx.allowed_files = [
  "file:{{ workspace_root }}/",
  "file:/intel/.metaflow/FederatedBrats",
]
